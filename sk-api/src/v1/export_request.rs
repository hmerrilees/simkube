/*
 * SimKube API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 * Generated by: https://openapi-generator.tech
 */

 use super::*;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ExportRequest {
    #[serde(rename = "start_ts")]
    pub start_ts: i64,
    #[serde(rename = "end_ts")]
    pub end_ts: i64,
    #[serde(rename = "export_path")]
    pub export_path: String,
    #[serde(rename = "filters")]
    pub filters: Box<ExportFilters>,
    #[serde(rename = "export_format")]
    pub export_format: ExportFormat,
}

impl ExportRequest {
    pub fn new(start_ts: i64, end_ts: i64, export_path: String, filters: ExportFilters, export_format: ExportFormat) -> ExportRequest {
        ExportRequest {
            start_ts,
            end_ts,
            export_path,
            filters: Box::new(filters),
            export_format,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ExportFormat {
    #[serde(rename = "msgpack")]
    Msgpack,
    #[serde(rename = "json")]
    Json,
}

impl Default for ExportFormat {
    fn default() -> ExportFormat {
        Self::Msgpack
    }
}

